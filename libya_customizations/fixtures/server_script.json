[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 14:06:56.505517",
  "module": "Libya Customizations",
  "name": "Item Defaults",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Item",
  "script": "if doc.item_group == \"Services\":\n    doc.is_stock_item = 0\n    doc.brand = \"Services\"\nelse:\n    doc.is_stock_item = 1\n\nif doc.is_stock_item:\n    doc.naming_series = 'I-'\n    doc.description = doc.item_name\n    doc.end_of_life = '2999-12-31'\n    doc.valuation_method = 'Moving Average'\n    doc.stock_uom = 'Unit'\n    doc.purchase_uom = 'Unit'\n    doc.sales_uom = 'Unit'\nelse:\n    doc.naming_series = 'I-'\n    doc.description = doc.item_name\n    doc.end_of_life = '2999-12-31'\n    doc.stock_uom = 'Unit'\n    doc.is_purchase_item = 0\n    doc.sales_uom = 'Unit'",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-04 11:19:59.132553",
  "module": "Libya Customizations",
  "name": "Sales Invoice - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "if not frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"System Manager\"]]):\n    conditions=\"is_opening='No'\"\n\nif not frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"System Manager\"]]):\n    conditions = \"`tabSales Invoice`.name NOT IN (SELECT amended_from FROM `tabSales Invoice` WHERE amended_from IS NOT NULL)\"\n\n# if frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"Warehouse User\"]]):\n#     conditions = \"is_return=1 AND workflow_state IN ('Pending Submission', 'Returned', 'Rejected Submission', 'Pending Cancellation', 'Discarded', 'Rejected Cancellation')\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-09 14:15:18.385060",
  "module": "Libya Customizations",
  "name": "Account - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Account",
  "script": "role1 = frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"Libya Team\"]])\nrole2 = frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"Chief Executive Officer\"]])\nif role1 and not role2:\n    conditions = \"restrict_account_view='No'\"\nif role1:\n    conditions = \"is_group=0\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:06.103992",
  "module": "Libya Customizations",
  "name": "Item Price - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Item Price",
  "script": "if frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"Libya Team\"]]):\n    conditions = \"selling=1\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:05.986576",
  "module": "Libya Customizations",
  "name": "Receipt Voucher - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Receipt Voucher",
  "script": "if not frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"System Manager\"]]):\n    conditions = \"`tabReceipt Voucher`.name NOT IN (SELECT amended_from FROM `tabReceipt Voucher` WHERE amended_from IS NOT NULL)\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:05.886717",
  "module": "Libya Customizations",
  "name": "Payment Voucher - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Payment Voucher",
  "script": "if not frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"System Manager\"]]):\n    conditions = \"`tabPayment Voucher`.name NOT IN (SELECT amended_from FROM `tabPayment Voucher` WHERE amended_from IS NOT NULL)\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:05.810268",
  "module": "Libya Customizations",
  "name": "Transfer Voucher - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Transfer Voucher",
  "script": "if not frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"System Manager\"]]):\n    conditions = \"`tabTransfer Voucher`.name NOT IN (SELECT amended_from FROM `tabTransfer Voucher` WHERE amended_from IS NOT NULL)\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:05.701022",
  "module": "Libya Customizations",
  "name": "Debt Voucher - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Debt Voucher",
  "script": "if not frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"System Manager\"]]):\n    conditions = \"`tabDebt Voucher`.name NOT IN (SELECT amended_from FROM `tabDebt Voucher` WHERE amended_from IS NOT NULL)\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:05.462582",
  "module": "Libya Customizations",
  "name": "Clearing Voucher - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Clearing Voucher",
  "script": "if not frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"System Manager\"]]):\n    conditions = \"`tabClearing Voucher`.name NOT IN (SELECT amended_from FROM `tabClearing Voucher` WHERE amended_from IS NOT NULL)\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save (Submitted Document)",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-08-02 10:37:55.774932",
  "module": "Libya Customizations",
  "name": "Update Remarks in Sales Invoice (After Submit)",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "doc = frappe.get_doc(doc)\nsales_order = doc.sales_order\ndelivery_note = doc.items[0].delivery_note\ntext = \"\"\nif doc.is_return:\n    if doc.is_paid:\n        text = 'فاتورة مردودات مبيعات نقدية'\n    else:\n        text = 'فاتورة مردودات مبيعات آجلة'\nelse:\n    if doc.is_paid:\n        text = f'فاتورة مبيعات نقدية من إذن تسليم رقم {delivery_note} وأمر بيع رقم {sales_order}'\n    else:\n        text = f'فاتورة مبيعات آجلة من إذن تسليم رقم {delivery_note} وأمر بيع رقم {sales_order}'\n        \nfrappe.db.set_value('Sales Invoice', doc.name, 'remarks', text)\nfrappe.db.set_value('GL Entry', {\"voucher_type\":\"Sales Invoice\", \"voucher_no\": doc.name}, 'remarks', text)\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:07.433349",
  "module": "Libya Customizations",
  "name": "Assigning Item Selling Prices Only for Libya Team",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Item Price",
  "script": "if frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"Libya Team\"]]):\n    conditions = \"selling=1\"",
  "script_type": "Permission Query"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:07.379755",
  "module": "Libya Customizations",
  "name": "Update Accounts In Sales Invoice",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "discount_account = frappe.db.get_value(\"Company\", doc.company, \"default_sales_discount_account\")\nreturn_account = frappe.db.get_value(\"Company\", doc.company, \"default_sales_return_account\")\n\ndoc.additional_discount_account = discount_account\n\nif doc.is_return:\n    for item in doc.items:\n        item.income_account = return_account",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-08-02 10:38:05.642262",
  "module": "Libya Customizations",
  "name": "Update Remarks in Sales Invoice",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "doc = frappe.get_doc(doc)\nsales_order = doc.items[0].sales_order\ndelivery_note = doc.items[0].delivery_note\nif doc.is_opening == \"Yes\":\n    doc.remarks = \"فاتورة إفتتاحية\"\nelse:\n    if doc.is_return:\n        doc.remarks = \"فاتورة مردودات آجلة مبيعات\"\n    else:\n        doc.remarks = f\"فاتورة مبيعات آجلة من إذن تسليم رقم {delivery_note} وأمر بيع رقم {sales_order}\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:04.693089",
  "module": "Libya Customizations",
  "name": "Update Payment Status upon submit Sales Invoice",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "if not doc.is_paid and not doc.is_return:\n    doc.payment_status = \"Credit Invoice\"\nelif doc.is_paid and not doc.is_return:\n    doc.payment_status = \"Cash Invoice\"\nelif doc.is_return and not doc.is_paid:\n    doc.payment_status = \"Credit Return\"\nelif doc.is_paid and doc.is_return:\n    doc.payment_status = \"Cash Return\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-25 09:27:05.342016",
  "module": "Libya Customizations",
  "name": "Update Payment Status upon cancel Sales Invoice",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "doc.payment_status = \"Cancelled\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save (Submitted Document)",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-03 17:01:12.141120",
  "module": "Libya Customizations",
  "name": "Update Payment Status in Sales Invoice (After Submit)",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.is_opening == 'Yes':\n    doc.payment_status = \"Opening\"\nelif not doc.is_paid and not doc.is_return:\n    doc.payment_status = \"Credit Invoice\"\nelif doc.is_paid and not doc.is_return:\n    doc.payment_status = \"Cash Invoice\"\nelif doc.is_return and not doc.is_paid:\n    doc.payment_status = \"Credit Return\"\nelif doc.is_paid and doc.is_return:\n    doc.payment_status = \"Cash Return\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-28 10:41:22.595637",
  "module": "Libya Customizations",
  "name": "Change Document Status (Sales Invoice) Before Cancel",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "doc.custom_status = \"Cancelled\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-28 10:41:22.698733",
  "module": "Libya Customizations",
  "name": "Change Document Status (Sales Invoice) Before Submit",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "doc.custom_status = \"Submitted\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Hourly",
  "modified": "2024-12-28 13:45:41.646557",
  "module": "Libya Customizations",
  "name": "Restarting Stuck Process Payment Reconciliation",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "first_time = frappe.utils.add_to_date(frappe.utils.now_datetime(), hours=-0.24) # for one hour\nsecond_time = frappe.utils.add_to_date(frappe.utils.now_datetime(), hours=-72) # for one hour\ndocs = frappe.db.get_list(\"Process Payment Reconciliation\", [[\"creation\", \"between\", [second_time, first_time]], [\"status\", \"=\", \"Running\"]])\nfor doc in docs:\n    frappe.call(\"erpnext.accounts.doctype.process_payment_reconciliation.process_payment_reconciliation.pause_job_for_doc\", docname = doc.name)\n    frappe.call(\"erpnext.accounts.doctype.process_payment_reconciliation.process_payment_reconciliation.trigger_job_for_doc\", docname = doc.name)\n",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": "*/30 * * * *",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Cron",
  "modified": "2024-12-28 13:47:49.145507",
  "module": "Libya Customizations",
  "name": "Triggering Repost Item Valuation Every 30 Min",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "frappe.call(\"erpnext.stock.doctype.repost_item_valuation.repost_item_valuation.execute_repost_item_valuation\")",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": "0 */12 * * *",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Cron",
  "modified": "2024-12-28 13:36:49.262857",
  "module": "Libya Customizations",
  "name": "Auto-Payment Reconcilliation",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "for invoice in frappe.db.get_list(\"Sales Invoice\", [[\"is_return\", \"=\", 0],[\"docstatus\", \"=\", 1],[\"outstanding_amount\", \"<\", 0]], ['name', 'company']):\n    linked_docs = frappe.call(\"erpnext.accounts.doctype.unreconcile_payment.unreconcile_payment.get_linked_payments_for_doc\", company = invoice.company, doctype= \"Sales Invoice\", docname=invoice.name)\n    selection_map = []\n    for elem in linked_docs:\n        if(elem.voucher_type == \"Payment Entry\"):\n            selection_map = [{\n    \t\t\t\"company\": elem.company,\n    \t\t\t\"voucher_type\": elem.voucher_type,\n    \t\t\t\"voucher_no\": elem.voucher_no,\n    \t\t\t\"against_voucher_type\": \"Sales Invoice\",\n    \t\t\t\"against_voucher_no\": invoice.name,\n    \t\t}]\n            try:\n                frappe.call(\"erpnext.accounts.doctype.unreconcile_payment.unreconcile_payment.create_unreconcile_doc_for_selection\", selections=json.dumps(selection_map));\n            except:\n                continue\nfor company in frappe.get_all(\"Company\"):\n    company = company.name\n    account = frappe.db.get_value(\"Company\", company, \"default_receivable_account\")\n    for customer in frappe.get_all(\"Customer\", {\"disabled\": 0}):\n        outstanding_documents = frappe.call('erpnext.accounts.doctype.payment_entry.payment_entry.get_outstanding_reference_documents', args = {'party_type':'Customer', 'party':customer.name, 'party_account':account}) or 0\n        flag = False\n        if outstanding_documents:\n            total = 0\n            for i in outstanding_documents:\n                if i.outstanding_amount > 0:\n                    flag = True\n                    break\n        if flag:\n            unallocated_amount = frappe.db.get_value(\"Payment Entry\", [[\"party\", \"=\", customer.name], [\"unallocated_amount\", \">\", 0], [\"docstatus\", \"=\", 1]], \"sum(unallocated_amount)\") or 0\n            credit_amount = frappe.db.get_value(\"Journal Entry Account\", [[\"party\", \"=\", customer.name], [\"credit\", \">\", 0], [\"reference_name\", \"=\", None], [\"docstatus\", \"=\", 1]], \"sum(credit)\") or 0\n            cn_amount = frappe.db.get_value(\"Sales Invoice\", [[\"customer\", \"=\", customer.name], [\"outstanding_amount\", \"<\", 0], [\"is_return\", \"=\", 1], [\"docstatus\", \"=\", 1]], \"sum(outstanding_amount)\") or 0\n            if unallocated_amount or credit_amount or cn_amount:\n                reconciliation = frappe.get_doc({\n                    \"doctype\": \"Process Payment Reconciliation\",\n                    \"party_type\": \"Customer\",\n                    \"party\" : customer.name,\n                    \"company\": company,\n                    \"receivable_payable_account\": account,\n                    \"default_advance_account\": account\n                }).insert()\n                reconciliation.save()\n                reconciliation.submit()\n",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 20:40:24.445248",
  "module": "Libya Customizations",
  "name": "Validating ZERO Rate in Sales Invoice",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "for item in doc.items:\n    if item.rate == 0:\n        frappe.throw(_(f\"Selling Rate of Item ({item.item_code}) cannot be ZERO\"), title=_('Error'))",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 17:01:29.242894",
  "module": "Libya Customizations",
  "name": "Purchase Invoice Remark Update",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Purchase Invoice",
  "script": "if doc.bill_no:\n    doc.remarks = f'مقابل فاتورة مورد رقم {doc.bill_no} بتاريخ {frappe.utils.formatdate(doc.bill_date)}'",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": "*/15 * * * *",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Cron",
  "modified": "2025-06-30 10:10:17.226860",
  "module": "Libya Customizations",
  "name": "Correcting Workflow Status in Sales Invoice",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "sis = frappe.db.get_list('Sales Invoice', {'workflow_state':'Returned', 'is_return':0, 'is_opening':'No'})\nfor si in sis:\n    frappe.db.set_value('Sales Invoice', si.name, 'workflow_state', 'Posted')",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 20:39:13.204299",
  "module": "Libya Customizations",
  "name": "Update Brand in SI",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "for item in doc.items:\n    if not item.brand:\n        item.brand = frappe.db.get_value(\"Item\", item.item_code, \"brand\")\n        ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-06 20:44:57.928425",
  "module": "Libya Customizations",
  "name": "Validating Duplicate Items in SI",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "doc = frappe.get_doc(doc)\ndoc.validate_for_duplicate_items()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-10-09 15:40:48.501379",
  "module": "Libya Customizations",
  "name": "Purchase Invoice - Permission Query",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Purchase Invoice",
  "script": "if not frappe.db.get_value(\"Has Role\", [[\"parent\", \"=\", frappe.session.user], ['role', \"=\", \"System Manager\"]]):\n    conditions = \"`tabPurchase Invoice`.name NOT IN (SELECT amended_from FROM `tabPurchase Invoice` WHERE amended_from IS NOT NULL)\"",
  "script_type": "Permission Query"
 }
]